/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.CriminalJusticeSystem;

import Model.CriminalJusticeSystem.Case;
import Model.CriminalJusticeSystem.CriminalJusticeSystem;
import Model.PrisonEcosystem;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import Model.CriminalJusticeSystem.Police;
import Model.DB4OUtil.DB4OUtil;
import Model.Prison.Prison;
import Model.UserAccountManagement.UserAccount;
import Model.WorkQueue.WorkQueue;
import Model.WorkQueue.WorkRequest;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thejas
 */
public class JudgementPage extends javax.swing.JPanel {

    JPanel container;
    CardLayout layout;
    PrisonEcosystem system;
    Case currentCase;
    CriminalJusticeSystem criminalJusticeSystem;
    ArrayList<Police> listOfPoliceDepartments;
    ArrayList<Prison> listOfPrisons;
    Police selectedPoliceDepartment;
    Prison selectedPrison;
    UserAccount account;
    WorkRequest prisonWorkreq, policeWorkreq;

    /**
     * Creates new form JudgementPage
     *
     * @param container
     * @param currentCase
     * @param criminalJusticeSystem
     * @param system
     */
    public JudgementPage(JPanel container, Case currentCase, UserAccount account, CriminalJusticeSystem criminalJusticeSystem, WorkRequest prisonWorkreq, WorkRequest policeWorkreq, PrisonEcosystem system) {
        initComponents();
        this.container = container;
        layout = (CardLayout) container.getLayout();
        this.system = system;
        this.currentCase = currentCase;
        this.criminalJusticeSystem = criminalJusticeSystem;
        listOfPrisons = system.getPrisons();
        listOfPoliceDepartments = this.criminalJusticeSystem.getListOfPolice();
        this.account = account;
        this.prisonWorkreq = prisonWorkreq;
        this.policeWorkreq = policeWorkreq;
        initializeTables();

        prisontbl.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                initializeFields();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

            private void initializeFields() {
                selectedPrison = (Prison) prisontbl.getModel().getValueAt(prisontbl.getSelectedRow(), 0);
            }
        });

        policetbl.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                initializeFields();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

            private void initializeFields() {
                selectedPoliceDepartment = (Police) policetbl.getModel().getValueAt(policetbl.getSelectedRow(), 0);

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        prisontbl = new javax.swing.JTable();
        btnAssignPrison = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        policetbl = new javax.swing.JTable();
        btnAssignPolicecDepartment = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 640, 100, 40));

        prisontbl.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        prisontbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Department name", "Admin name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(prisontbl);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 530, 470));

        btnAssignPrison.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        btnAssignPrison.setText("Assign prison");
        btnAssignPrison.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignPrisonActionPerformed(evt);
            }
        });
        add(btnAssignPrison, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 530, 40));

        policetbl.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        policetbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Department name", "Admin name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(policetbl);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 530, 470));

        btnAssignPolicecDepartment.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        btnAssignPolicecDepartment.setText("Assign Police Department");
        btnAssignPolicecDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignPolicecDepartmentActionPerformed(evt);
            }
        });
        add(btnAssignPolicecDepartment, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 580, 530, 40));

        jLabel7.setBackground(new java.awt.Color(71, 120, 197));
        jLabel7.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("   Court Administrator");
        jLabel7.setMaximumSize(new java.awt.Dimension(231, 25));
        jLabel7.setMinimumSize(new java.awt.Dimension(231, 25));
        jLabel7.setOpaque(true);
        jLabel7.setPreferredSize(new java.awt.Dimension(231, 25));
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 1090, 60));

        jPanel1.setBackground(new java.awt.Color(84, 127, 206));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        layout.previous(container);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignPrisonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignPrisonActionPerformed
        // TODO add your handling code here:
        if (selectedPrison != null) {
            currentCase.setPrison(selectedPrison);
            if (prisonWorkreq.getStatus() != null && prisonWorkreq.getStatus().equals("Prisoner work req, New Case")) {
                prisonWorkreq.setReceiver(selectedPrison.getManagement().getAdmin().getUserAccount());
                prisonWorkreq.setStatus("Prisoner work req, Prison Assigned");
                account.getEnterprise().getWorkqueue().getWorkRequestList().add(prisonWorkreq);
            }

            if (currentCase.getProcessingPoliceDepartment()== null) {
                currentCase.setStatus("Prison Assigned");
                selectedPrison.getManagement().getCaseDirectory().getListOfCases().add(currentCase);
            } else {
                currentCase.setStatus("Prison and Police Assigned");
            }
            JOptionPane.showMessageDialog(this, "Case updated");
            DB4OUtil.storeSystem(system);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a prison from the table to assign to the case");
        }
    }//GEN-LAST:event_btnAssignPrisonActionPerformed

    private void btnAssignPolicecDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignPolicecDepartmentActionPerformed
        // TODO add your handling code here:
        if (selectedPoliceDepartment != null) {
            currentCase.setProcessingPoliceDepartment(selectedPoliceDepartment);
            if (policeWorkreq.getStatus() != null && policeWorkreq.getStatus().equals("Police work req, New Case")) {
                    policeWorkreq.setReceiver(selectedPoliceDepartment.getPoliceAdmin().getUserAccount());
                    policeWorkreq.setStatus("Police work req, Police Assigned");
                    account.getEnterprise().getWorkqueue().getWorkRequestList().add(prisonWorkreq);
                }
            if (currentCase.getPrison()== null) {
                currentCase.setStatus("Police Assigned");
            } else {
                currentCase.setStatus("Prison and Police Assigned");
            }
            JOptionPane.showMessageDialog(this, "Case updated");
            DB4OUtil.storeSystem(system);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a police department from the table to assign to the case");
        }
    }//GEN-LAST:event_btnAssignPolicecDepartmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignPolicecDepartment;
    private javax.swing.JButton btnAssignPrison;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable policetbl;
    private javax.swing.JTable prisontbl;
    // End of variables declaration//GEN-END:variables

    private void initializeTables() {
        DefaultTableModel tablemodel = (DefaultTableModel) policetbl.getModel();
        tablemodel.setRowCount(0);
        if (!listOfPoliceDepartments.isEmpty()) {
            for (Police police : listOfPoliceDepartments) {
                if (police != null) {
                    Object[] row = new Object[2];
                    row[0] = police;
                    row[1] = police.getPoliceAdmin().getName();
                    tablemodel.addRow(row);
                }
            }
        }

        DefaultTableModel prisonTableModel = (DefaultTableModel) prisontbl.getModel();
        prisonTableModel.setRowCount(0);
        if (!listOfPrisons.isEmpty()) {
            for (Prison prison : listOfPrisons) {
                if (prison != null) {
                    Object[] row = new Object[2];
                    row[0] = prison;
                    row[1] = prison.getManagement().getAdmin().getName();
                    prisonTableModel.addRow(row);
                }
            }
        }
    }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.CriminalJusticeSystem;

import Model.CriminalJusticeSystem.Case;
import Model.CriminalJusticeSystem.CaseDirectory;
import Model.CriminalJusticeSystem.Court;
import Model.CriminalJusticeSystem.CriminalJusticeSystem;
import Model.DB4OUtil.DB4OUtil;
import Model.PrisonEcosystem;
import Model.UserAccountManagement.UserAccount;
import Model.WorkQueue.WorkRequest;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thejas
 */
public class PoliceOfficerLogin extends javax.swing.JPanel {

    JPanel container;
    UserAccount account;
    PrisonEcosystem system;
    Case selectedCase;
    CriminalJusticeSystem cjs;
    Court currentCourt;
    WorkRequest workreq;

    /**
     * Creates new form PoliceOfficerLogin
     *
     * @param container
     * @param account
     * @param system
     */
    public PoliceOfficerLogin(JPanel container, UserAccount account, PrisonEcosystem system) {
        initComponents();
        this.container = container;
        this.account = account;
        this.system = system;
        initializeTable();
        txtFeedback.setEnabled(false);
        lblFeedback.setEnabled(false);
        tblPrisonersToBeTransported.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                initializeFields();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

            private void initializeFields() {
                selectedCase = (Case) tblPrisonersToBeTransported.getModel().getValueAt(tblPrisonersToBeTransported.getSelectedRow(), 0);
                ArrayList<WorkRequest> listOfWorkRequests = selectedCase.getProcessingCourt().getJudge().getUserAccount().getWorkQueue().getWorkRequestList();
                for (WorkRequest listOfWorkRequest : listOfWorkRequests) {
                    if (listOfWorkRequest.getReceiver().equals(account) && listOfWorkRequest.getStatus() != null
                            && listOfWorkRequest.getPrisoner().getName().equals(selectedCase.getAccused().getName()) 
                            && listOfWorkRequest.getStatus().contains("Police work req")) {
                        workreq = listOfWorkRequest;
                        if (workreq.getStatus().equals("Police work req, Prisoner imprisoned") && workreq.getMessage() != null && !workreq.getMessage().isEmpty()) {
                            lblFeedback.setEnabled(true);
                            txtFeedback.setText(workreq.getMessage());
                            txtFeedback.setEnabled(true);
                            break;
                        } else {
                            txtFeedback.setEnabled(false);
                            lblFeedback.setEnabled(false);
                        }
                    } else {
                        txtFeedback.setEnabled(false);
                        lblFeedback.setEnabled(false);
                    }
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPrisonerTransportCompleted = new javax.swing.JButton();
        btnBeginTransport = new javax.swing.JButton();
        btnTransportInProgress = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPrisonersToBeTransported = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblFeedback = new javax.swing.JLabel();
        txtFeedback = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        btnPrisonerTransportCompleted.setText("Prisoner Transport Completed");
        btnPrisonerTransportCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrisonerTransportCompletedActionPerformed(evt);
            }
        });

        btnBeginTransport.setText("Begin Transport");
        btnBeginTransport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeginTransportActionPerformed(evt);
            }
        });

        btnTransportInProgress.setText("Transport in progress");
        btnTransportInProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransportInProgressActionPerformed(evt);
            }
        });

        tblPrisonersToBeTransported.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Case Number", "Name", "Start date", "Years of Imprisonment", "Imprisoned", "Transported By", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPrisonersToBeTransported);

        jLabel7.setBackground(new java.awt.Color(71, 120, 197));
        jLabel7.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("   Police Officer");
        jLabel7.setMaximumSize(new java.awt.Dimension(231, 25));
        jLabel7.setMinimumSize(new java.awt.Dimension(231, 25));
        jLabel7.setOpaque(true);
        jLabel7.setPreferredSize(new java.awt.Dimension(231, 25));

        jPanel2.setBackground(new java.awt.Color(84, 127, 206));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        lblFeedback.setText("Feedback:");

        txtFeedback.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1090, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBeginTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTransportInProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFeedback)
                                .addGap(34, 34, 34)
                                .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrisonerTransportCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFeedback)
                    .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnPrisonerTransportCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTransportInProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBeginTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrisonerTransportCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrisonerTransportCompletedActionPerformed
        // TODO add your handling code here:
        if (selectedCase != null) {
           if(selectedCase.getStatus().equals("Transport in progress") ){
            ArrayList<WorkRequest> listOfWorkRequests = selectedCase.getProcessingCourt().getJudge().getUserAccount().getWorkQueue().getWorkRequestList();
            for (WorkRequest listOfWorkRequest : listOfWorkRequests) {
                if (listOfWorkRequest.getReceiver().equals(account) && listOfWorkRequest.getStatus().equals("Police work req, Police Assigned")) {
                    listOfWorkRequest.setStatus("Police work req, Prisoner transported");
                    listOfWorkRequest.setResolveDate(new Date());
                }
            }
            selectedCase.setStatus("Transport Success");
            JOptionPane.showMessageDialog(this, "Case status changed successfully");
            initializeTable();
            DB4OUtil.storeSystem(system);
           }else{
               JOptionPane.showMessageDialog(this, "Please change status in order");
           }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a case to change the status from the table");
        }
    }//GEN-LAST:event_btnPrisonerTransportCompletedActionPerformed

    private void btnBeginTransportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeginTransportActionPerformed
        // TODO add your handling code here:
        if (selectedCase != null) {
           if((selectedCase.getStatus().equals("Police Assigned") || selectedCase.getStatus().equals("Prison and Police Assigned"))){
            selectedCase.setStatus("Accepted for transport");
            JOptionPane.showMessageDialog(this, "Case status changed successfully");
            initializeTable();
            DB4OUtil.storeSystem(system);
           }else{
               JOptionPane.showMessageDialog(this, "Please change status in order");
           }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a case to change the status from the table");
        }
    }//GEN-LAST:event_btnBeginTransportActionPerformed

    private void btnTransportInProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransportInProgressActionPerformed
        // TODO add your handling code here:
        if (selectedCase != null) {
            if(selectedCase.getStatus().equals("Accepted for transport")){
            selectedCase.setStatus("Transport in progress");
            JOptionPane.showMessageDialog(this, "Case status changed successfully");
            initializeTable();
            DB4OUtil.storeSystem(system);
            }else{
               JOptionPane.showMessageDialog(this, "Please change status in order");
           }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a case to change the status from the table");
        }
    }//GEN-LAST:event_btnTransportInProgressActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBeginTransport;
    private javax.swing.JButton btnPrisonerTransportCompleted;
    private javax.swing.JButton btnTransportInProgress;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFeedback;
    private javax.swing.JTable tblPrisonersToBeTransported;
    private javax.swing.JTextField txtFeedback;
    // End of variables declaration//GEN-END:variables

    private void initializeTable() {
        cjs = (CriminalJusticeSystem) account.getEnterprise();
        ArrayList<Court> courtList = cjs.getListOfCourts();
        for (Court court : courtList) {
            ArrayList<Case> cases = court.getCaseDirectory().getListOfCases();
            DefaultTableModel model = (DefaultTableModel) tblPrisonersToBeTransported.getModel();
            model.setRowCount(0);
            for (Case aCase : cases) {
                if (aCase.getTransportedToPrisonBy() != null && aCase.getTransportedToPrisonBy().getUserAccount().getUsername().equals(account.getUsername())) {
                    
                    Object[] row = new Object[7];
                    row[0] = aCase;
                    row[1] = aCase.getAccused().getName();
                    row[2] = aCase.getStartDate().toString();
                    row[3] = aCase.getYearsOfImprisonment() + "";
                    row[4] = aCase.isImprisoned() == true ? "Yes" : "No";
                    row[5] = aCase.getTransportedToPrisonBy() != null ? aCase.getTransportedToPrisonBy().getUserAccount().getUsername() : "-";
                    row[6] = aCase.getStatus();
                    model.addRow(row);
                }
            }
        }
    }
}

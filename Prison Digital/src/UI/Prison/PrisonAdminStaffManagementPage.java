/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Prison;

import Model.DB4OUtil.DB4OUtil;
import Model.Employee.Employee;
import Model.Prison.Prison;
import Model.PrisonEcosystem;
import Model.Role.DiningAdmin;
import Model.Role.InfirmaryAdmin;
import Model.Role.PrisonStaff;
import Model.UserAccountManagement.UserAccount;
import java.awt.CardLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author udayindukuri
 */
public class PrisonAdminStaffManagementPage extends javax.swing.JPanel {
    
    CardLayout cardLayoutPointer;
    JPanel container;
    PrisonEcosystem system;
    UserAccount user;
    Prison prison;

    /**
     * Creates new form PrisonAdminJPanel
     */
    public PrisonAdminStaffManagementPage(JPanel container, UserAccount user, PrisonEcosystem system) {
        initComponents();
        this.container = container;
        cardLayoutPointer = (CardLayout) container.getLayout();
        this.system = system;
        this.user = user;
        this.prison = (Prison) user.getEnterprise();
        populateTable();
        
        PrisonStaffJTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }
            
            @Override
            public void mousePressed(MouseEvent e) {
                Employee a = (Employee) PrisonStaffJTable.getModel().getValueAt(PrisonStaffJTable.getSelectedRow(), 0);
                displayDataInFields(a);
            }
            
            @Override
            public void mouseReleased(MouseEvent e) {
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
            }
            
        });
        
    }
    
    private void displayDataInFields(Employee a) {
        
        txtStaffName.setText(a.getName());
        txtUserName.setText(a.getUserAccount().getUsername());
        txtPassword.setText(a.getUserAccount().getPassword());
        
        if (a.getRole().toString().equals(InfirmaryAdmin.class.getName())) {
            des.setSelectedIndex(1);
        } else if (a.getRole().toString().equals(DiningAdmin.class.getName())) {
            des.setSelectedIndex(2);
        } else {
            des.setSelectedIndex(0);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        PrisonStaffJTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblStaffName = new javax.swing.JLabel();
        txtStaffName = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        des = new javax.swing.JComboBox<>();
        lblDesignation = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnCreate1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PrisonStaffJTable.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        PrisonStaffJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Designation", "UserName", "Password"
            }
        ));
        jScrollPane1.setViewportView(PrisonStaffJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 960, 250));

        jPanel1.setBackground(new java.awt.Color(242, 248, 255));

        lblStaffName.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblStaffName.setText("Staff Name:");

        txtStaffName.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N

        lblUserName.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblUserName.setText("User Name:");

        txtUserName.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblPassword.setText("Password:");

        txtPassword.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N

        des.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        des.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Security Supervisor", "Infirmary Supervisor", "Dining Supervisor" }));

        lblDesignation.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblDesignation.setText("Designation:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStaffName)
                    .addComponent(lblUserName)
                    .addComponent(lblPassword)
                    .addComponent(lblDesignation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(des, 0, 255, Short.MAX_VALUE)
                    .addComponent(txtPassword)
                    .addComponent(txtStaffName)
                    .addComponent(txtUserName))
                .addGap(75, 75, 75))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStaffName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblUserName)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblDesignation)
                    .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 510, 270));

        jPanel2.setBackground(new java.awt.Color(242, 248, 255));

        btnCreate1.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        btnCreate1.setText("Create");
        btnCreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreate1ActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreate1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 310, 420, 270));
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void btnCreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreate1ActionPerformed
        // TODO add your handling code here:

        String name = txtStaffName.getText().toString();
        String username = txtUserName.getText().toString();
        String password = txtPassword.getText().toString();
        
        if (des.getSelectedItem().toString().equals("Security Supervisor")) {
            if (prison.getManagement().getGuardAdmin() != null) {
                JOptionPane.showMessageDialog(null, "Security Supervisor Already Exists");
                return;
            }
            Employee staff = new Employee(system, name, username, password, user.getEnterprise(), new PrisonStaff());
            prison.getManagement().setGuardAdmin(staff);
            JOptionPane.showMessageDialog(null, "Guard Added");
            DB4OUtil.storeSystem(system);
        } else if (des.getSelectedItem().toString().equals("Infirmary Supervisor")) {
            if (prison.getManagement().getInfirmaryAdmin() != null) {
                JOptionPane.showMessageDialog(null, "Infirmary Supervisor Already Exists");
                return;
            }
            Employee staff = new Employee(system, name, username, password, user.getEnterprise(), new InfirmaryAdmin());
            prison.getManagement().setInfirmaryAdmin(staff);
            JOptionPane.showMessageDialog(null, "Infirmary Supervisor Added");
            DB4OUtil.storeSystem(system);
        } else if (des.getSelectedItem().toString().equals("Dining Supervisor")) {
            if (prison.getManagement().getDiningAdmin() != null) {
                JOptionPane.showMessageDialog(null, "Dining Supervisor Already Exists");
                return;
            }
            Employee staff = new Employee(system, name, username, password, user.getEnterprise(), new DiningAdmin());
            prison.getManagement().setDiningAdmin(staff);
            JOptionPane.showMessageDialog(null, "Dining Supervisor Added");
            DB4OUtil.storeSystem(system);
        };
        
        populateTable();
        resetFields();

    }//GEN-LAST:event_btnCreate1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRow = PrisonStaffJTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm delete?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Employee e = (Employee) PrisonStaffJTable.getValueAt(selectedRow, 0);
                
                if (e.getRole().toString() == "Model.Role.InfirmaryAdmin") {
                    prison.getManagement().setInfirmaryAdmin(null);
                } else if (e.getRole().toString() == "Model.Role.DiningAdmin") {
                    prison.getManagement().setDiningAdmin(null);
                } else {
                    prison.getManagement().setGuardAdmin(null);
                }
                
                system.getUserAccountDirectory().deleteUserAccount(e.getUserAccount());
                
                populateTable();
                resetFields();
                DB4OUtil.storeSystem(system);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete the account");
        }
        

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int selectedRow = PrisonStaffJTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm update? (Note: Role cannot be changed)", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Employee e = (Employee) PrisonStaffJTable.getValueAt(selectedRow, 0);
                
                String name = txtStaffName.getText().toString();
                String username = txtUserName.getText().toString();
                String password = txtPassword.getText().toString();
                
                e.setName(name);
                e.getUserAccount().setUsername(username);
                e.getUserAccount().setPassword(password);

//                if (des.getSelectedItem().toString().equals("Guard")) {
//                    if (prison.getManagement().getGuardAdmin() != null) {
//                        JOptionPane.showMessageDialog(null, "Security Supervisor Already Exists");
//                        return;
//                    }
//                    e.setRole(new PrisonStaff());
//                    e.setName(name);
//                    e.getUserAccount().setUsername(username);
//                    e.getUserAccount().setPassword(password);
//                    JOptionPane.showMessageDialog(null, "Guard Added");
//                } else if (des.getSelectedItem().toString().equals("Infirmary Supervisor")) {
//                    if (prison.getManagement().getInfirmaryAdmin() != null) {
//                        JOptionPane.showMessageDialog(null, "Infirmary Supervisor Already Exists");
//                        return;
//                    }
//                    e.setRole(new InfirmaryAdmin());
//                    prison.getManagement().setInfirmaryAdmin(e);
//                    e.setName(name);
//                    e.getUserAccount().setUsername(username);
//                    e.getUserAccount().setPassword(password);
//                    JOptionPane.showMessageDialog(null, "Infirmary Supervisor Added");
//                } else if (des.getSelectedItem().toString().equals("Dining Supervisor")) {
//                    if (prison.getManagement().getDiningAdmin() != null) {
//                        JOptionPane.showMessageDialog(null, "Dining Supervisor Already Exists");
//                        return;
//                    }
//                    e.setRole(new DiningAdmin());
//                    prison.getManagement().setInfirmaryAdmin(e);
//                    e.setName(name);
//                    e.getUserAccount().setUsername(username);
//                    e.getUserAccount().setPassword(password);
//                    JOptionPane.showMessageDialog(null, "Dining Supervisor Added");
//                } else {
//                    JOptionPane.showMessageDialog(null, "Cannot Update");
//                };
                populateTable();
                resetFields();
                DB4OUtil.storeSystem(system);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete the account");
        }

    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PrisonStaffJTable;
    private javax.swing.JButton btnCreate1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> des;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDesignation;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblStaffName;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtStaffName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel tablemodel = (DefaultTableModel) PrisonStaffJTable.getModel();
        
        tablemodel.setRowCount(0);

        //adding infirmary
        Employee e = prison.getManagement().getInfirmaryAdmin();
        if (e != null) {
            Object[] row = new Object[4];
            row[0] = e;
            row[1] = getRole(e);
            row[2] = e.getUserAccount().getUsername();
            row[3] = e.getUserAccount().getPassword();
            tablemodel.addRow(row);
        }

        //adding Guard
        Employee g = prison.getManagement().getGuardAdmin();
        if (g != null) {
            Object[] row = new Object[4];
            row[0] = g;
            row[1] = getRole(g);
            row[2] = g.getUserAccount().getUsername();
            row[3] = g.getUserAccount().getPassword();
            tablemodel.addRow(row);
        }

        //adding Dining
        Employee f = prison.getManagement().getDiningAdmin();
        if (f != null) {
            Object[] row = new Object[4];
            row[0] = f;
            
            row[1] = getRole(f);
            row[2] = f.getUserAccount().getUsername();
            row[3] = f.getUserAccount().getPassword();
            tablemodel.addRow(row);
        }
        
    }
    
    private String getRole(Employee employee) {
        if (employee != null) {
            String roleName = employee.getRole().toString();
            return roleName.subSequence(roleName.lastIndexOf(".") + 1, roleName.length()).toString();
        }
        return null;
    }
    
    private void resetFields() {
        txtUserName.setText("");
        txtStaffName.setText("");
        txtPassword.setText("");
        des.setSelectedIndex(0);
    }
}

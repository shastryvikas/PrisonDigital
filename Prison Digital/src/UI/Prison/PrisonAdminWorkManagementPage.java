/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Prison;

import Model.CriminalJusticeSystem.Case;
import Model.DB4OUtil.DB4OUtil;
import Model.Employee.Employee;
import Model.Prison.Prison;
import Model.Prison.Unit;
import Model.PrisonEcosystem;
import Model.UserAccountManagement.UserAccount;
import Model.WorkQueue.WorkQueue;
import Model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author udayindukuri
 */
public class PrisonAdminWorkManagementPage extends javax.swing.JPanel {
    
    CardLayout cardLayoutPointer;
    JPanel container;
    PrisonEcosystem system;
    UserAccount user;
    Prison prison;

    /**
     * Creates new form PrisonAdminJPanel
     */
    public PrisonAdminWorkManagementPage(JPanel container, UserAccount user, PrisonEcosystem system) {
        initComponents();
        this.container = container;
        cardLayoutPointer = (CardLayout) container.getLayout();
        this.system = system;
        this.user = user;
        this.prison = (Prison) user.getEnterprise();
        populateTable();
        lblFeedback.setEnabled(false);
        txtFeedback.setEnabled(false);
        caseTable.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }
            
            @Override
            public void mousePressed(MouseEvent e) {
                Case a = (Case) caseTable.getModel().getValueAt(caseTable.getSelectedRow(), 0);
                displayDataInFields(a);
            }
            
            @Override
            public void mouseReleased(MouseEvent e) {
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
            }
            
        });
        
    }
    
    private void displayDataInFields(Case a) {
        
        jLabel7.setText(a.getAccused().getName());
        jLabel8.setText(a.getVerdict());
        jLabel9.setText(a.getProcessingCourt().getName());
        jLabel10.setText(a.getProcessingPoliceDepartment().getName());
        if (a.getTransportedToPrisonBy() != null) {
            jLabel11.setText(a.getTransportedToPrisonBy().getName());
        } else {
            jLabel11.setText("-");
        }
        if (a.getCell() != null) {
            jLabel19.setText(a.getCell().getUnitID() + "");
        } else {
            jLabel19.setText("-");
        }
        ArrayList<WorkRequest> listOfWorkRequests = a.getProcessingCourt().getJudge().getUserAccount().getWorkQueue().getWorkRequestList();
        for (WorkRequest listOfWorkRequest : listOfWorkRequests) {
            if (a.getAccused().getName().equals(listOfWorkRequest.getPrisoner().getName()) && listOfWorkRequest.getStatus() != null
                    && listOfWorkRequest.getStatus().equals("Prisoner work req, Prisoner imprisoned") && listOfWorkRequest.getMessage() != null && !listOfWorkRequest.getMessage().isEmpty()) {
                lblFeedback.setEnabled(true);
                txtFeedback.setText(listOfWorkRequest.getMessage());
                txtFeedback.setEnabled(true);
                break;
            } else {
                lblFeedback.setEnabled(false);
                txtFeedback.setEnabled(false);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        caseTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblFeedback = new javax.swing.JLabel();
        txtFeedback = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        caseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Case ID", "Start Date", "Years", "Processed", "Status"
            }
        ));
        jScrollPane1.setViewportView(caseTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 960, 210));

        jPanel1.setBackground(new java.awt.Color(242, 248, 255));

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel2.setText("Prisoner Name:");

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel3.setText("Verdict:");

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel4.setText("Processing Court:");

        jLabel5.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel5.setText("Processing Police Department:");

        jLabel6.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel6.setText("Transported to Prison By:");

        jLabel7.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("-");

        jLabel8.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 204));
        jLabel8.setText("-");

        jLabel9.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 204));
        jLabel9.setText("-");

        jLabel10.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 204));
        jLabel10.setText("-");

        jLabel11.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 204));
        jLabel11.setText("-");

        jLabel18.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel18.setText("Cell Number: ");

        jLabel19.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 204));
        jLabel19.setText("-");

        lblFeedback.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lblFeedback.setText("Feedback: ");

        txtFeedback.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtFeedback.setForeground(new java.awt.Color(0, 102, 204));
        txtFeedback.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(lblFeedback))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFeedback)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel19))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFeedback)
                    .addComponent(txtFeedback))
                .addGap(30, 30, 30))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 500, 290));

        jPanel2.setBackground(new java.awt.Color(242, 248, 255));

        jButton4.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jButton4.setText("Release from Cell");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jButton3.setText("Assign a Cell");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 440, 90));

        jPanel3.setBackground(new java.awt.Color(242, 248, 255));

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jButton1.setText("Remove a Cell");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jButton5.setText("Add a Cell");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel12.setText("Total Cells:");

        jLabel15.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 102, 204));
        jLabel15.setText("-");

        jLabel13.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel13.setText("Occupied Cells:");

        jLabel16.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 204));
        jLabel16.setText("-");

        jLabel14.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel14.setText("Available Cells:");

        jLabel17.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 102, 204));
        jLabel17.setText("-");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel14)
                            .addComponent(jLabel17))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, 440, 180));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int selectedRow = caseTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm imprisonment?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Case c = (Case) caseTable.getValueAt(selectedRow, 0);
                ArrayList<WorkRequest> listOfWorkRequests = c.getProcessingCourt().getJudge().getUserAccount().getWorkQueue().getWorkRequestList();

                if (!prison.getInfrastructure().getCellsEmpty().isEmpty()) {

                    if (c.getStatus() != null && (c.getStatus().equals("Transport Success") || c.getStatus().equals("Released"))) {
                        Unit u = prison.getInfrastructure().getCellsEmpty().get(0);
                        c.setCell(u);
                        c.setImprisoned(Boolean.TRUE);
                        c.setStatus("Imprisoned");
                        prison.getInfrastructure().getCellsEmpty().remove(u);
                        prison.getInfrastructure().getCellsOccupied().add(u);
                        for (WorkRequest listOfWorkRequest : listOfWorkRequests) {
                            if (listOfWorkRequest.getPrisoner().getName().equals(c.getAccused().getName())
                                    && listOfWorkRequest.getStatus() != null
                                    && (listOfWorkRequest.getStatus().equals("Prisoner work req, Prison Assigned")
                                    || listOfWorkRequest.getStatus().equals("Prisoner work req, Prisoner released"))) {
                                listOfWorkRequest.setStatus("Prisoner work req, Prisoner imprisoned");
                                listOfWorkRequest.setResolveDate(new Date());
                            } else if (listOfWorkRequest.getPrisoner().getName().equals(c.getAccused().getName()) && listOfWorkRequest.getStatus() != null
                                    && (listOfWorkRequest.getStatus().equals("Police work req, Prisoner transported")
                                    || listOfWorkRequest.getStatus().equals("Police work req, Prisoner released"))) {
                                listOfWorkRequest.setStatus("Police work req, Prisoner imprisoned");
                                listOfWorkRequest.setResolveDate(new Date());
                            }
                        }
                        populateTable();
                        JOptionPane.showMessageDialog(null, "Prisoner has been locked up in the cell");
                        DB4OUtil.storeSystem(system);
                    } else {
                        JOptionPane.showMessageDialog(null, "Prisoner not yet transported to prison");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No room in the prison.");
                }
                
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to process the case");
        }
        resetPrisonerDetails();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        int selectedRow = caseTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm release?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Case c = (Case) caseTable.getValueAt(selectedRow, 0);
                Unit u = c.getCell();
                c.setImprisoned(Boolean.FALSE);
                c.setStatus("Released");
                ArrayList<WorkRequest> listOfWorkRequests = c.getProcessingCourt().getJudge().getUserAccount().getWorkQueue().getWorkRequestList();
                for (WorkRequest listOfWorkRequest : listOfWorkRequests) {
                    if (listOfWorkRequest.getPrisoner().getName().equals(c.getAccused().getName())
                            && listOfWorkRequest.getStatus() != null && listOfWorkRequest.getStatus().equals("Prisoner work req, Prisoner imprisoned")) {
                        listOfWorkRequest.setStatus("Prisoner work req, Prisoner released");
                        listOfWorkRequest.setResolveDate(new Date());
                    } else if (listOfWorkRequest.getPrisoner().getName().equals(c.getAccused().getName()) && listOfWorkRequest.getStatus() != null
                            && listOfWorkRequest.getStatus().equals("Police work req, Prisoner imprisoned")) {
                        listOfWorkRequest.setStatus("Police work req, Prisoner released");
                    }
                }
                c.setCell(null);
                prison.getInfrastructure().getCellsEmpty().add(u);
                prison.getInfrastructure().getCellsOccupied().remove(u);
                populateTable();
                JOptionPane.showMessageDialog(null, "Prisoner has been released");
                DB4OUtil.storeSystem(system);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to process the case");
        }
        resetPrisonerDetails();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!prison.getInfrastructure().getCellsEmpty().isEmpty()) {
            prison.getInfrastructure().getCellsEmpty().remove(0);
            populateTable();
            DB4OUtil.storeSystem(system);
        } else {
            JOptionPane.showMessageDialog(null, "There are no more cells to remove");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        prison.getInfrastructure().getCellsEmpty().add(new Unit());
        populateTable();
        DB4OUtil.storeSystem(system);

    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable caseTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFeedback;
    private javax.swing.JLabel txtFeedback;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel tablemodel = (DefaultTableModel) caseTable.getModel();
        
        tablemodel.setRowCount(0);
        if (prison.getManagement() != null && prison.getManagement().getCaseDirectory() != null && prison.getManagement().getCaseDirectory().getListOfCases()!=null) {
            for (Case c : prison.getManagement().getCaseDirectory().getListOfCases()) {
                Object[] row = new Object[5];
                row[0] = c;
                row[1] = c.getStartDate().toString();
                row[2] = c.getYearsOfImprisonment() + "";
                row[3] = c.isImprisoned() == true ? "Yes" : "No";
                row[4] = c.getStatus();
                tablemodel.addRow(row);
            }

            jLabel15.setText((prison.getInfrastructure().getCellsEmpty().size() + prison.getInfrastructure().getCellsOccupied().size()) + "");
            jLabel16.setText(prison.getInfrastructure().getCellsOccupied().size() + "");
            jLabel17.setText(prison.getInfrastructure().getCellsEmpty().size() + "");
        }

    }
    
    private void resetPrisonerDetails() {
        jLabel7.setText("-");
        jLabel8.setText("-");
        jLabel9.setText("-");
        jLabel10.setText("-");
        jLabel11.setText("-");
        jLabel19.setText("-");
    }
}

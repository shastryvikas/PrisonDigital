/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SysAdmin;

import Model.Employee.Employee;
import Model.Hospital.Hospital;
import Model.Hospital.Management;
import Model.Location;
import Model.PrisonEcosystem;
import Model.Role.HospitalAdmin;
import java.awt.CardLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thejas
 */
public class ManageHospitals extends javax.swing.JPanel {

    JPanel container;
    PrisonEcosystem system;
    Hospital selectedHospital;

    /**
     * Creates new form ManageHospitals
     *
     * @param container
     */
    public ManageHospitals(JPanel container, PrisonEcosystem system) {
        initComponents();
        this.container = container;
        this.system = system;
        initializeTable();
        tblHospitals.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                initializeFields();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

            private void initializeFields() {
                selectedHospital = (Hospital) tblHospitals.getModel().getValueAt(tblHospitals.getSelectedRow(), 0);
                txtHospitalName.setText(selectedHospital.getName());
                txtHospitalAdminName.setText(selectedHospital.getManagement().getHospitalAdmin().getName());
                txtHospitalLocation.setText(String.valueOf(selectedHospital.getLocation()));
                txtHospitalAdminPassword.setText(selectedHospital.getManagement().getHospitalAdmin().getUserAccount().getPassword());
                txtHospitalAdminUsername.setText(selectedHospital.getManagement().getHospitalAdmin().getUserAccount().getUsername());
                drpdwnStatus.setSelectedIndex(selectedHospital.getStatus() == true ? 0 : 1);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospitals = new javax.swing.JTable();
        lblHospitalName = new javax.swing.JLabel();
        txtHospitalName = new javax.swing.JTextField();
        lblHospitalLocation = new javax.swing.JLabel();
        txtHospitalLocation = new javax.swing.JTextField();
        lblHospitalAdminUsername = new javax.swing.JLabel();
        txtHospitalAdminUsername = new javax.swing.JTextField();
        lblHospitalAdminPassword = new javax.swing.JLabel();
        txtHospitalAdminPassword = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblHospitalStatus = new javax.swing.JLabel();
        drpdwnStatus = new javax.swing.JComboBox<>();
        lblHospitalAdminName = new javax.swing.JLabel();
        txtHospitalAdminName = new javax.swing.JTextField();

        tblHospitals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital Name", "Admin Name", "Username", "Password", "Location", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHospitals);

        lblHospitalName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHospitalName.setText("Name");

        lblHospitalLocation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHospitalLocation.setText("Location");

        lblHospitalAdminUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHospitalAdminUsername.setText("Admin Username");

        lblHospitalAdminPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHospitalAdminPassword.setText("Admin Password");

        btnAdd.setBackground(new java.awt.Color(244, 208, 129));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setText("Add");
        btnAdd.setPreferredSize(new java.awt.Dimension(85, 30));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(244, 208, 129));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate.setText("Update");
        btnUpdate.setPreferredSize(new java.awt.Dimension(85, 30));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(244, 208, 129));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 0, 0));
        btnBack.setText("Back");
        btnBack.setPreferredSize(new java.awt.Dimension(85, 30));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblHospitalStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHospitalStatus.setText("Status");

        drpdwnStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In Service", "Out of Service" }));

        lblHospitalAdminName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHospitalAdminName.setText("Admin Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 703, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblHospitalLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHospitalStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(drpdwnStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHospitalName)
                                .addComponent(txtHospitalLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)))
                        .addGap(152, 152, 152)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblHospitalAdminUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblHospitalAdminPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblHospitalAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtHospitalAdminUsername)
                                .addComponent(txtHospitalAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtHospitalAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(125, 125, 125))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalName)
                            .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHospitalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalAdminUsername)
                            .addComponent(txtHospitalAdminUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHospitalAdminPassword)
                            .addComponent(txtHospitalAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHospitalAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHospitalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(drpdwnStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblHospitalAdminName))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (checkInputFields(txtHospitalName) && checkInputFields(txtHospitalAdminName) && checkInputFields(txtHospitalAdminUsername) && checkInputFields(txtHospitalAdminPassword) && checkInputFields(txtHospitalLocation)) {
            if (checkIfHospitalNameIsUnique()) {
//                String[] locationData = txtHospitalLocation.getText().split(", ");
//Hospital newHospital = new Hospital(txtHospitalName.getText(), new Location(Double.parseDouble(locationData[0]), Double.parseDouble(locationData[1])), (drpdwnStatus.getSelectedIndex()==0));
                Hospital newHospital = new Hospital(txtHospitalName.getText(), new Location(42.338767, -71.087863), true);
                Employee hospitalAdmin = new Employee(system,txtHospitalAdminName.getText(), txtHospitalAdminUsername.getText(), txtHospitalAdminPassword.getText(), newHospital, new HospitalAdmin());
                newHospital.getManagement().setHospitalAdmin(hospitalAdmin);
                system.getHospitals().add(newHospital);
                initializeTable();
                resetFields();
                JOptionPane.showMessageDialog(this, "New Hospital has been added");
            } else {
                JOptionPane.showMessageDialog(this, "Hospital name already exists, try a different name");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fields cannot be empty for adding a new Hospital");
        }

    }//GEN-LAST:event_btnAddActionPerformed
    private void initializeTable() {
        ArrayList<Hospital> hospitalDetails = system.getHospitals();
        DefaultTableModel tablemodel = (DefaultTableModel) tblHospitals.getModel();
        tablemodel.setRowCount(0);
        if (hospitalDetails != null) {
            for (Hospital hospital : hospitalDetails) {
                if (hospital != null) {
                    Object[] row = new Object[6];
                    row[0] = hospital;
                    row[1] = hospital.getManagement().getHospitalAdmin().getName();
                    row[2] = hospital.getManagement().getHospitalAdmin().getUserAccount().getUsername();
                    row[3] = hospital.getManagement().getHospitalAdmin().getUserAccount().getPassword();
                    row[4] = hospital.getLocation();
                    row[5] = hospital.getStatus() == true ? "In service": "Out of service";
                    tablemodel.addRow(row);
                }
            }
        }
    }

    private void resetFields() {
        txtHospitalAdminPassword.setText("");
        txtHospitalAdminUsername.setText("");
        txtHospitalLocation.setText("");
        txtHospitalName.setText("");
        txtHospitalAdminName.setText("");
        drpdwnStatus.setSelectedIndex(0);
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (checkInputFields(txtHospitalName) && checkInputFields(txtHospitalAdminName) && checkInputFields(txtHospitalAdminUsername) && checkInputFields(txtHospitalAdminPassword) && checkInputFields(txtHospitalLocation)) {
            if (selectedHospital != null) {
                for (Hospital hospital : system.getHospitals()) {
                    if (selectedHospital.getName().equals(hospital.getName())) {
                        //String[] locationData =  txtHospitalLocation.getText().split(", ");
                        hospital.setName(txtHospitalName.getText());
                        // hospital.setLocation(new Location(Double.parseDouble(locationData[0]), Double.parseDouble(locationData[1])));
                        hospital.setLocation(new Location(42.338767, -71.087863));
                        hospital.getManagement().getHospitalAdmin().getUserAccount().setUsername(txtHospitalAdminUsername.getText());
                        hospital.getManagement().getHospitalAdmin().getUserAccount().setPassword(txtHospitalAdminPassword.getText());
                        hospital.getManagement().getHospitalAdmin().setName(txtHospitalAdminName.getText());
                        hospital.setStatus(drpdwnStatus.getSelectedIndex() == 0);
                        initializeTable();
                        resetFields();
                        JOptionPane.showMessageDialog(this, "Hospital details updated successfully");
                        break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a hospital to update from the table");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    public boolean checkInputFields(javax.swing.JTextField txtField, String regex) {
        return txtField.getText() != null && !txtField.getText().isEmpty() && txtField.getText().matches(regex);
    }

    public boolean checkInputFields(javax.swing.JTextField txtField) {
        return txtField.getText() != null && !txtField.getText().isEmpty();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> drpdwnStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHospitalAdminName;
    private javax.swing.JLabel lblHospitalAdminPassword;
    private javax.swing.JLabel lblHospitalAdminUsername;
    private javax.swing.JLabel lblHospitalLocation;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblHospitalStatus;
    private javax.swing.JTable tblHospitals;
    private javax.swing.JTextField txtHospitalAdminName;
    private javax.swing.JTextField txtHospitalAdminPassword;
    private javax.swing.JTextField txtHospitalAdminUsername;
    private javax.swing.JTextField txtHospitalLocation;
    private javax.swing.JTextField txtHospitalName;
    // End of variables declaration//GEN-END:variables

    private boolean checkIfHospitalNameIsUnique() {
        if (checkInputFields(txtHospitalName)) {
            for (Hospital hospital : system.getHospitals()) {
                if (hospital.getName().equals(txtHospitalName.getText())) {
                    return false;
                }
            }
        }
        return true;
    }
}
